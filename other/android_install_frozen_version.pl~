#!/usr/bin/perl

if(@ARGV == 0)
{
    print <<EoF ;
Usage: $0 <android home> <eclipse project dir> <chosen package> <name>
EoF
    exit -1;
}

my $android_home = shift @ARGV;
my $proj_dir = shift @ARGV;
my $chosen_package = shift @ARGV;
my $chosen_name = shift @ARGV;
my $temp_dir = "/tmp/android_install";
my $slash_package = $chosen_package;
$slash_package =~ s/\./\//g;

run("rm -rf $temp_dir");
run("mkdir $temp_dir");

run("cp -r $proj_dir/libs $temp_dir");
run("cp -r $proj_dir/src $temp_dir");
run("cp -r $proj_dir/res $temp_dir");
run("cp -r $proj_dir/gen $temp_dir");
run("cp $proj_dir/AndroidManifest.xml $temp_dir");

my @src_files = get_files("$temp_dir/src","*.java");
my @xml_files = get_files("$temp_dir/res","*.xml");
my @libs = get_files("$temp_dir/libs","*jar");

replace_in_files('package=".*?"','package="$chosen_package"',"","$temp_dir/AndroidManifest.xml");
#<application android:icon="@drawable/icon" android:label="
replace_in_files('<string name="app_name">.*?<\/string>',
		 '<string name="app_name">$chosen_name<\/string>',
		 "","$temp_dir/res/values/strings.xml");
replace_in_files('<string name="reviewer_app_name">.*?<\/string>',
		 '<string name="reviewer_app_name">${chosen_name}<\/string>',
		 "","$temp_dir/res/values/strings.xml");
replace_in_files('import com\.rareventure.*\.R;',"",@src_files);
replace_in_files('^(package .*;)','$1\nimport $chosen_package.R;\n',"",@src_files);

replace_in_files('xmlns:app="http:\/\/schemas.android.com\/apk\/res\/.*?"',
		 'xmlns:app="http:\/\/schemas.android.com\/apk\/res\/$chosen_package"',
		 @xml_files);

run("mkdir -p $temp_dir/gen/$slash_package");

run("$android_home/platform-tools/aapt package -f -M $temp_dir/AndroidManifest.xml -F $temp_dir/foo.apk -I $android_home/platforms/android-14/android.jar -S $temp_dir/res -J $temp_dir/gen/$slash_package");

run("mkdir $temp_dir/bin");

run("javac -cp $android_home/platforms/android-14/android.jar:".join(":",@libs)." -sourcepath $temp_dir/src:$temp_dir/gen -d $temp_dir/bin ".join(" ",@src_files)); 

run("$android_home/platform-tools/dx --dex --output=$temp_dir/classes.dex $temp_dir/bin ".join(" ",@libs));

run("$android_home/tools/apkbuilder $temp_dir/foo2.apk -u -z $temp_dir/foo.apk -f $temp_dir/classes.dex");

run("jarsigner -storepass android -keystore ~/.android/debug.keystore $temp_dir/foo2.apk  androiddebugkey");

print "Now run:\n\nadb -d install -r $temp_dir/foo2.apk\n";

sub get_files
{
    my ($dir,$glob) = @_;
    my @files = map {chop; $_;} (`find $dir -name '$glob'`);

    return @files;
}

sub replace_in_files
{
    my ($pat, $rep, $ext, @files) = @_;
    foreach $file (@files)
    {
#	print "Processing $file...";
	$bakfile = $file.".bak";
	run("cp","$file","$bakfile");
	
	open(IN,$bakfile) || die "Couldn't open $bakfile for reading";
	open(OUT,">".$file) || die "Couldn't open $file for writing";

	my $line;
	my $matchCount = 0;

	while($line = <IN>)
	{
	    if(eval("\$line =~ s/$pat/$rep/$ext;"))
	    {
		$matchCount ++;
	    }
	    print OUT $line;
	}			

	close IN;
	close OUT;
	
	print "Processing $file...replaced $matchCount matches for $pat\n";	

	run("rm","$bakfile");
    }
}


sub run
{
    print join(" ",@_)."\n";
    system(@_) == 0 || die join(" ",@_);
}
